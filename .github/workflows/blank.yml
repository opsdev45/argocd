name: argocd

on:
  repository_dispatch:
    types: [trigger_argocd]

permissions:
  contents: write
jobs:
  create-argocd-app:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    # Install and Config AWS-CLI , ArgoCD
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET }}
        aws-region: eu-west-2

    
    - name: Update kube config
      run: aws eks update-kubeconfig --name demo
      
    - name: Set up ArgoCD CLI
      run: |
        curl -sSL https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64 -o argocd
        chmod +x argocd
        sudo mv argocd /usr/local/bin/

    - name: Login to ArgoCD
      env:
        ARGOCD_SERVER: ${{ secrets.ARGOCD_api }}
        ARGOCD_USERNAME: admin
        ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
      run: |
        argocd login $ARGOCD_SERVER --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --insecure

    - name: Change image tag in deployment
      run: |
          # Update the deployment YAML with the new image tag
          sed -i "s|image: .*|image: ${{ github.event.client_payload.argo_parameter.image }}|g" deploy/deployment.yml
      
    - uses: stefanzweifel/git-auto-commit-action@v5
      with:
            commit_message: "Update image tag to ${{ github.event.client_payload.argo_parameter.image }}"
            branch: main
            github_token: ${{ secrets.GITHUB_TOKEN }}
            
    - name: Check if ArgoCD Application Exists
      id: check_app
      env:
        APP_NAME: ${{ github.event.client_payload.argo_parameter.namespace }}
      run: |
        if argocd app get $APP_NAME; then
          echo "exists=true" >> $GITHUB_ENV
        else
          echo "exists=false" >> $GITHUB_ENV
        fi
        
    - name: Create ArgoCD Application
      if: env.exists == 'false'
      env:
        APP_NAME: ${{ github.event.client_payload.argo_parameter.namespace }}
        APP_PATH: ${{ github.event.client_payload.argo_parameter.dir }}
        REPO_URL: https://github.com/opsdev45/argocd.git
        TARGET_REVISION: HEAD
        DEST_NAMESPACE: ${{ github.event.client_payload.argo_parameter.namespace }}
        PROJECT: default
      run: |
        echo "$APP_NAME" -- "${{ github.event.client_payload.argo_parameter.image }}"
        argocd app create $APP_NAME \
          --repo $REPO_URL \
          --path $APP_PATH \
          --dest-namespace $DEST_NAMESPACE \
          --dest-server https://kubernetes.default.svc \
          --revision $TARGET_REVISION \
          --project $PROJECT \
          --sync-policy automated \
          --auto-prune \
          --sync-option CreateNamespace=true

      

    
